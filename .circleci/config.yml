#
#
#  DO NOT EDIT THIS FILE - IT IS GENERATED FROM ./scripts/circleConfig/generate-with-netlify.js
#
#
#  ANY EDIT'S WILL BE OVER WRITTEN IF/WHEN REGENERATED
#
#
#  DO NOT EDIT THIS FILE - IT IS GENERATED FROM ./scripts/circleConfig/generate-with-netlify.js
#


aliases:
  - &docker_image
    working_directory: /usr/src/app
    docker:
      - image: ${AWS_ECR_REPO_URL_WITH_IMAGE}:${CIRCLE_SHA1}
        aws_auth:
          aws_access_key_id: ${ACCESS_KEY_ID}
          aws_secret_access_key: ${SECRET_ACCESS_KEY}
    resource_class: medium+

  - &releases_regex /release-[0-9]+\.[0-9]+\.[0-9]+/

  - &requires_image
    requires:
      - aws-ecr/build-and-push-image

  - &run_complete_tests
    run:
      name: Build & Test Release against production
      command: |
        node scripts/buildAndUnitTests.js production
        node scripts/integrationTests.js

  - &run_unit_tests
    steps:
      - run:
          name: Build & Test against staging
          command: |
            node scripts/buildAndUnitTests.js staging

  - &only_releases
    filters:
      branches:
        only:
          - *releases_regex

  - &all_branches
    filters:
      branches:
        ignore:
          - staging
          - *releases_regex
          - master

  - &only_staging
    filters:
      branches:
        only:
          staging

  - &run_staging
    steps:
      - run:
          name: Build, Test & Deploy Staging
          command: |
            node scripts/buildAndUnitTests.js staging
            node scripts/deployToNetlify.js

  - &only_master
    filters:
      branches:
        only:
          master

  - &run_master
    run:
      name: Build, Test & Deploy Master
      command: |
        node scripts/buildAndUnitTests.js production
        node scripts/integrationTests.js
        node scripts/deployToNetlifyProduction.js

  
version: 2.1
jobs:

  ae_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  ae_staging:
    <<: *docker_image
    <<: *run_staging

  ae_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$AE_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$AE_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$AE_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$AE_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$AE_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  ae_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$AE_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$AE_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$AE_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$AE_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$AE_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  all3_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  all3_staging:
    <<: *docker_image
    <<: *run_staging

  all3_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$ALL3_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$ALL3_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$ALL3_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$ALL3_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$ALL3_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  all3_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$ALL3_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$ALL3_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$ALL3_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$ALL3_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$ALL3_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  amc_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  amc_staging:
    <<: *docker_image
    <<: *run_staging

  amc_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$AMC_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$AMC_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$AMC_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$AMC_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$AMC_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  amc_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$AMC_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$AMC_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$AMC_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$AMC_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$AMC_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  banijaygroup_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  banijaygroup_staging:
    <<: *docker_image
    <<: *run_staging

  banijaygroup_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$BANIJAYGROUP_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$BANIJAYGROUP_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$BANIJAYGROUP_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$BANIJAYGROUP_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$BANIJAYGROUP_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  banijaygroup_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$BANIJAYGROUP_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$BANIJAYGROUP_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$BANIJAYGROUP_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$BANIJAYGROUP_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$BANIJAYGROUP_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  cineflix_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  cineflix_staging:
    <<: *docker_image
    <<: *run_staging

  cineflix_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$CINEFLIX_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$CINEFLIX_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$CINEFLIX_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$CINEFLIX_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$CINEFLIX_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  cineflix_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$CINEFLIX_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$CINEFLIX_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$CINEFLIX_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$CINEFLIX_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$CINEFLIX_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  demo_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  demo_staging:
    <<: *docker_image
    <<: *run_staging

  demo_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$DEMO_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$DEMO_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$DEMO_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$DEMO_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$DEMO_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  demo_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$DEMO_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$DEMO_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$DEMO_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$DEMO_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$DEMO_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  discovery_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  discovery_staging:
    <<: *docker_image
    <<: *run_staging

  discovery_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$DISCOVERY_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$DISCOVERY_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$DISCOVERY_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$DISCOVERY_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$DISCOVERY_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  discovery_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$DISCOVERY_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$DISCOVERY_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$DISCOVERY_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$DISCOVERY_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$DISCOVERY_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  drg_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  drg_staging:
    <<: *docker_image
    <<: *run_staging

  drg_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$DRG_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$DRG_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$DRG_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$DRG_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$DRG_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  drg_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$DRG_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$DRG_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$DRG_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$DRG_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$DRG_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  endeavor_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  endeavor_staging:
    <<: *docker_image
    <<: *run_staging

  endeavor_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$ENDEAVOR_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$ENDEAVOR_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$ENDEAVOR_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$ENDEAVOR_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$ENDEAVOR_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  endeavor_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$ENDEAVOR_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$ENDEAVOR_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$ENDEAVOR_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$ENDEAVOR_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$ENDEAVOR_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  fremantle_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  fremantle_staging:
    <<: *docker_image
    <<: *run_staging

  fremantle_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$FREMANTLE_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$FREMANTLE_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$FREMANTLE_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$FREMANTLE_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$FREMANTLE_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  fremantle_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$FREMANTLE_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$FREMANTLE_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$FREMANTLE_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$FREMANTLE_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$FREMANTLE_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  itv_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  itv_staging:
    <<: *docker_image
    <<: *run_staging

  itv_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$ITV_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$ITV_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$ITV_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$ITV_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$ITV_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  itv_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$ITV_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$ITV_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$ITV_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$ITV_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$ITV_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  keshet_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  keshet_staging:
    <<: *docker_image
    <<: *run_staging

  keshet_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$KESHET_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$KESHET_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$KESHET_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$KESHET_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$KESHET_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  keshet_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$KESHET_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$KESHET_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$KESHET_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$KESHET_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$KESHET_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  rtv_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  rtv_staging:
    <<: *docker_image
    <<: *run_staging

  rtv_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$RTV_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$RTV_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$RTV_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$RTV_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$RTV_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  storylab_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  storylab_staging:
    <<: *docker_image
    <<: *run_staging

  storylab_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$STORYLAB_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$STORYLAB_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$STORYLAB_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$STORYLAB_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$STORYLAB_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  storylab_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$STORYLAB_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$STORYLAB_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$STORYLAB_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$STORYLAB_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$STORYLAB_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master


  wildbrain_all_branches:
    <<: *docker_image
    <<: *run_unit_tests

  wildbrain_staging:
    <<: *docker_image
    <<: *run_staging

  wildbrain_releases:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$WILDBRAIN_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$WILDBRAIN_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$WILDBRAIN_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$WILDBRAIN_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$WILDBRAIN_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_complete_tests

  wildbrain_master:
    <<: *docker_image
    steps:
      - run:
          name: Create Cypress Env - EMAIL_ADDRESS
          command: echo "export CYPRESS_EMAIL_ADDRESS=$WILDBRAIN_EMAIL_ADDRESS" >> $BASH_ENV
      - run:
          name: Create Cypress Env - PASSWORD
          command: echo "export CYPRESS_PASSWORD=$WILDBRAIN_PASSWORD" >> $BASH_ENV
      - run:
          name: Create Cypress Env - API_KEY
          command: echo "export CYPRESS_API_KEY=$WILDBRAIN_API_KEY" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_USERNAME
          command: echo "export CYPRESS_OKTA_USERNAME=$WILDBRAIN_OKTA_USERNAME" >> $BASH_ENV
      - run:
          name: Create Cypress Env - OKTA_PASSWORD
          command: echo "export CYPRESS_OKTA_PASSWORD=$WILDBRAIN_OKTA_PASSWORD" >> $BASH_ENV
      - <<: *run_master

executors:
  docker_build:
    machine:
      docker_layer_caching: true

orbs:
  aws-ecr: circleci/aws-ecr@6.15.3
  # agent: percy/agent@0.1.3
workflows:
  version: 2.1
  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_REPO_URL
          aws-access-key-id: ACCESS_KEY_ID
          aws-secret-access-key: SECRET_ACCESS_KEY
          dockerfile: Dockerfile-test
          region: AWS_REGION
          repo: one-web
          executor: docker_build
          create-repo: true
          tag: "${CIRCLE_SHA1}"

      - ae_all_branches:
          <<: *requires_image
          <<: *all_branches

      - ae_releases:
          <<: *requires_image
          <<: *only_releases

      - ae_staging:
          <<: *requires_image
          <<: *only_staging

      - ae_master:
          <<: *requires_image
          <<: *only_master

      - all3_all_branches:
          <<: *requires_image
          <<: *all_branches

      - all3_releases:
          <<: *requires_image
          <<: *only_releases

      - all3_staging:
          <<: *requires_image
          <<: *only_staging

      - all3_master:
          <<: *requires_image
          <<: *only_master

      - amc_all_branches:
          <<: *requires_image
          <<: *all_branches

      - amc_releases:
          <<: *requires_image
          <<: *only_releases

      - amc_staging:
          <<: *requires_image
          <<: *only_staging

      - amc_master:
          <<: *requires_image
          <<: *only_master

      - banijaygroup_all_branches:
          <<: *requires_image
          <<: *all_branches

      - banijaygroup_releases:
          <<: *requires_image
          <<: *only_releases

      - banijaygroup_staging:
          <<: *requires_image
          <<: *only_staging

      - banijaygroup_master:
          <<: *requires_image
          <<: *only_master

      - cineflix_all_branches:
          <<: *requires_image
          <<: *all_branches

      - cineflix_releases:
          <<: *requires_image
          <<: *only_releases

      - cineflix_staging:
          <<: *requires_image
          <<: *only_staging

      - cineflix_master:
          <<: *requires_image
          <<: *only_master

      - demo_all_branches:
          <<: *requires_image
          <<: *all_branches

      - demo_releases:
          <<: *requires_image
          <<: *only_releases

      - demo_staging:
          <<: *requires_image
          <<: *only_staging

      - demo_master:
          <<: *requires_image
          <<: *only_master

      - discovery_all_branches:
          <<: *requires_image
          <<: *all_branches

      - discovery_releases:
          <<: *requires_image
          <<: *only_releases

      - discovery_staging:
          <<: *requires_image
          <<: *only_staging

      - discovery_master:
          <<: *requires_image
          <<: *only_master

      - drg_all_branches:
          <<: *requires_image
          <<: *all_branches

      - drg_releases:
          <<: *requires_image
          <<: *only_releases

      - drg_staging:
          <<: *requires_image
          <<: *only_staging

      - drg_master:
          <<: *requires_image
          <<: *only_master

      - endeavor_all_branches:
          <<: *requires_image
          <<: *all_branches

      - endeavor_releases:
          <<: *requires_image
          <<: *only_releases

      - endeavor_staging:
          <<: *requires_image
          <<: *only_staging

      - endeavor_master:
          <<: *requires_image
          <<: *only_master

      - fremantle_all_branches:
          <<: *requires_image
          <<: *all_branches

      - fremantle_releases:
          <<: *requires_image
          <<: *only_releases

      - fremantle_staging:
          <<: *requires_image
          <<: *only_staging

      - fremantle_master:
          <<: *requires_image
          <<: *only_master

      - itv_all_branches:
          <<: *requires_image
          <<: *all_branches

      - itv_releases:
          <<: *requires_image
          <<: *only_releases

      - itv_staging:
          <<: *requires_image
          <<: *only_staging

      - itv_master:
          <<: *requires_image
          <<: *only_master

      - keshet_all_branches:
          <<: *requires_image
          <<: *all_branches

      - keshet_releases:
          <<: *requires_image
          <<: *only_releases

      - keshet_staging:
          <<: *requires_image
          <<: *only_staging

      - keshet_master:
          <<: *requires_image
          <<: *only_master

      - rtv_all_branches:
          <<: *requires_image
          <<: *all_branches

      - rtv_releases:
          <<: *requires_image
          <<: *only_releases

      - rtv_staging:
          <<: *requires_image
          <<: *only_staging

      - storylab_all_branches:
          <<: *requires_image
          <<: *all_branches

      - storylab_releases:
          <<: *requires_image
          <<: *only_releases

      - storylab_staging:
          <<: *requires_image
          <<: *only_staging

      - storylab_master:
          <<: *requires_image
          <<: *only_master

      - wildbrain_all_branches:
          <<: *requires_image
          <<: *all_branches

      - wildbrain_releases:
          <<: *requires_image
          <<: *only_releases

      - wildbrain_staging:
          <<: *requires_image
          <<: *only_staging

      - wildbrain_master:
          <<: *requires_image
          <<: *only_master
const path = require('path')
const fs = require('fs')
const yaml = require('js-yaml');

const commentBlock = `/*\n
  DO NOT EDIT THIS FILE - IT IS GENERATED FROM YAML\n\n
  scripts/createImageDimensions.js\n\n
  ANY EDIT'S WILL BE OVER WRITTEN WHEN REGENERATED\n\n
  DO NOT EDIT THIS FILE - IT IS GENERATED FROM YAML\n\n*/\n
`

const readYamlToJson = (filePath, filename) => {
  try {
    const yamlTxt = fs.readFileSync(path.join(__dirname, '../', filePath, filename), 'utf-8')
    return yaml.safeLoad(yamlTxt)
  } catch (e) {
    console.log('\033[0;31m Error in createImageDimensions.js -> readYamlToJson: ', e, '\033[0;1m')
    throw Error('readError')
  }
}

const writeJsonToFile = (jsonObj, filePath, filename) => {
  try {
    fs.writeFileSync(
      path.resolve(__dirname, '../', filePath, filename),
      `${commentBlock}export default ${jsonObj}`
    )
  } catch (e) {
    console.log('\033[0;31m Error in createImageDimensions.js -> writeJsonToFile: ', e, '\033[0;1m')
    throw Error('writeError')
  }
}

const createImageDimensionsFromYaml = (clientName = process.argv[2]) => {
  try {
    if (!clientName) throw Error('Must provide a client name')
    const jsonObj = readYamlToJson(`src/theme/${clientName}/yaml/`, 'image-dimensions.yml')
    writeJsonToFile(JSON.stringify(jsonObj, null, 2), 'src/javascript/config', 'image-dimensions.js')
  } catch (e) {
    console.log('\033[0;31m', e, '\033[0;1m')
  }
}

// Un-comment to run directly as node script
// createImageDimensionsFromYaml()

module.exports = createImageDimensionsFromYaml


